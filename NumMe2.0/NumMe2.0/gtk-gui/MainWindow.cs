
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Fixed fixed1;

	private global::Gtk.Label Static;

	private global::Gtk.Button prime;

	private global::Gtk.Button multiplicatorium;

	private global::Gtk.Entry Input;

	private global::Gtk.Label commands;

	private global::Gtk.Label Output;

	private global::Gtk.Button ok;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.fixed1 = new global::Gtk.Fixed();
		this.fixed1.Name = "fixed1";
		this.fixed1.HasWindow = false;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.Static = new global::Gtk.Label();
		this.Static.Name = "Static";
		this.Static.LabelProp = global::Mono.Unix.Catalog.GetString("Choose one of the options below: \n\n      PriMe®                 :Check if number " +
				"is prime, then factor the number \n\n      Multiplicatorium®      :Factor two numb" +
				"ers ");
		this.fixed1.Add(this.Static);
		global::Gtk.Fixed.FixedChild w1 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.Static]));
		w1.X = 340;
		w1.Y = 25;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.prime = new global::Gtk.Button();
		this.prime.CanFocus = true;
		this.prime.Name = "prime";
		this.prime.UseUnderline = true;
		this.prime.Label = global::Mono.Unix.Catalog.GetString("+");
		this.fixed1.Add(this.prime);
		global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.prime]));
		w2.X = 338;
		w2.Y = 45;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.multiplicatorium = new global::Gtk.Button();
		this.multiplicatorium.CanFocus = true;
		this.multiplicatorium.Name = "multiplicatorium";
		this.multiplicatorium.UseUnderline = true;
		this.multiplicatorium.Label = global::Mono.Unix.Catalog.GetString("+");
		this.fixed1.Add(this.multiplicatorium);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.multiplicatorium]));
		w3.X = 338;
		w3.Y = 75;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.Input = new global::Gtk.Entry();
		this.Input.CanFocus = true;
		this.Input.Name = "Input";
		this.Input.IsEditable = true;
		this.Input.InvisibleChar = '●';
		this.fixed1.Add(this.Input);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.Input]));
		w4.X = 23;
		w4.Y = 42;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.commands = new global::Gtk.Label();
		this.commands.Name = "commands";
		this.commands.LabelProp = global::Mono.Unix.Catalog.GetString("Hey there! Welcome to NumMe® ");
		this.fixed1.Add(this.commands);
		global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.commands]));
		w5.X = 27;
		w5.Y = 23;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.Output = new global::Gtk.Label();
		this.Output.Name = "Output";
		this.fixed1.Add(this.Output);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.Output]));
		w6.X = 28;
		w6.Y = 120;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.ok = new global::Gtk.Button();
		this.ok.CanFocus = true;
		this.ok.Name = "ok";
		this.ok.UseUnderline = true;
		this.ok.Label = global::Mono.Unix.Catalog.GetString("OK");
		this.fixed1.Add(this.ok);
		global::Gtk.Fixed.FixedChild w7 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.ok]));
		w7.X = 187;
		w7.Y = 39;
		this.Add(this.fixed1);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 782;
		this.DefaultHeight = 300;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.prime.Clicked += new global::System.EventHandler(this.OnPrimeClicked);
		this.multiplicatorium.Clicked += new global::System.EventHandler(this.OnMultiplicatoriumClicked);
		this.ok.Clicked += new global::System.EventHandler(this.OnOkClicked);
	}
}
